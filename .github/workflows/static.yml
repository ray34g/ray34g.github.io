# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ray34g-cluster-g-arc-runner-set
    container:
      image: mcr.microsoft.com/vscode/devcontainers/typescript-node:16-bullseye
    steps:
      - name: Install Hugo CLI
        env:
          HUGO_RELEASE: "0.139.3"
          HUGO_ARCH: "linux-amd64"
        run: |
          wget "https://github.com/gohugoio/hugo/releases/download/v${HUGO_RELEASE}/hugo_extended_${HUGO_RELEASE}_${HUGO_ARCH}.deb" \
          && apt-get update && export DEBIAN_FRONTEND=noninteractive \
          && apt-get -y install --no-install-recommends "./hugo_extended_${HUGO_RELEASE}_${HUGO_ARCH}.deb" \
          && rm "./hugo_extended_${HUGO_RELEASE}_${HUGO_ARCH}.deb"
      - name: Install Dart Sass
        env: 
          DARTSASS_RELEASE: "1.83.0"
          DARTSASS_ARCH: "linux-x64"
        run: |
          wget "https://github.com/sass/dart-sass/releases/download/${DARTSASS_RELEASE}/dart-sass-${DARTSASS_RELEASE}-${DARTSASS_ARCH}.tar.gz" \
              && export DEBIAN_FRONTEND=noninteractive \
              && tar -v -x -C ./ -f dart-sass-${DARTSASS_RELEASE}-${DARTSASS_ARCH}.tar.gz \
              && cp -r ./dart-sass/* /bin \
              && rm dart-sass-${DARTSASS_RELEASE}-${DARTSASS_ARCH}.tar.gz \
              && rm -r ./dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
          TZ: Asia/Tokyo
        run: |
          hugo \
            --gc \
            --minify          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'
  # Deploy Job
  deploy:
    runs-on: ray34g-cluster-g-arc-runner-set
    container:
      image: mcr.microsoft.com/vscode/devcontainers/typescript-node:16-bullseye
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
